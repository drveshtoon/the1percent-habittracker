import json
import datetime
import os


class Habit:
    def __init__(self, name, description, periodicity):
        self.name = name
        self.description = description
        self.periodicity = periodicity
        self.created_date = datetime.date.today()
        self.completions = []

    def complete_task(self):
        self.completions.append(datetime.datetime.now())

    def streak(self):
        streak_count = 0
        today = datetime.date.today()
        for date in self.completions[::-1]:
            if (today - date.date()).days <= 1 if self.periodicity == "daily" else (today - date.date()).days <= 7:
                streak_count += 1
                today = date.date()
            else:
                break
        return streak_count

    def __str__(self):
        return f"{self.name}: {self.streak()} days streak"


class HabitTracker:
    def __init__(self):
        self.habits = []

    def add_habit(self, habit):
        self.habits.append(habit)

    def delete_habit(self, habit_name):
        self.habits = [habit for habit in self.habits if habit.name != habit_name]

    def get_all_habits(self):
        return self.habits

    def get_habits_by_periodicity(self, periodicity):
        return [habit for habit in self.habits if habit.periodicity == periodicity]

    def get_longest_streak(self):
        return max(habit.streak() for habit in self.habits)

    def get_longest_streak_for_habit(self, habit_name):
        habit = next((habit for habit in self.habits if habit.name == habit_name), None)
        if habit:
            return habit.streak()
        return 0

    def save_to_file(self, file_path):
        with open(file_path, 'w') as f:
            data = [{"name": habit.name, "description": habit.description, "periodicity": habit.periodicity,
                     "created_date": habit.created_date.strftime('%Y-%m-%d'),
                     "completions": [c.strftime('%Y-%m-%d %H:%M:%S') for c in habit.completions]} for habit in
                    self.habits]
            json.dump(data, f, indent=2)

    def load_from_file(self, file_path):
        if os.path.exists(file_path):
            with open(file_path, 'r') as f:
                data = json.load(f)
                self.habits = []
                for entry in data:
                    habit = Habit(entry["name"], entry["description"], entry["periodicity"])
                    habit.created_date = datetime.datetime.strptime(entry["created_date"], '%Y-%m-%d').date()
                    habit.completions = [datetime.datetime.strptime(c, '%Y-%m-%d %H:%M:%S') for c in
                                         entry["completions"]]
                    self.habits.append(habit)


# Predefined habits and their example tracking data
predefined_habits_data = [
    {
        "name": "Drink Water",
        "description": "Drink 8 glasses of water daily.",
        "periodicity": "daily",
        "created_date": "2023-01-01",
        "completions": ["2023-01-01 08:00:00", "2023-01-02 09:30:00", "2023-01-03 07:45:00"]
    },
    {
        "name": "Exercise",
        "description": "Exercise for 30 minutes daily.",
        "periodicity": "daily",
        "created_date": "2023-01-01",
        "completions": ["2023-01-01 10:00:00", "2023-01-02 09:30:00", "2023-01-03 10:30:00"]
    },
    {
        "name": "Reading",
        "description": "Read for 1 hour daily.",
        "periodicity": "daily",
        "created_date": "2023-01-01",
        "completions": ["2023-01-01 18:00:00", "2023-01-02 19:30:00", "2023-01-03 17:45:00"]
    },
    {
        "name": "Learn a new Language",
        "description": "Spend 2 hours weekly on learning a new language",
        "periodicity": "weekly",
        "created_date": "2023-01-01",
        "completions": ["2023-01-08 07:00:00", "2023-01-15 08:30:00", "2023-01-22 09:45:00"]
    },
    {
        "name": "Gratitude Journaling",
        "description": "Write in your gratitude journal for 15 minutes daily.",
        "periodicity": "daily",
        "created_date": "2023-01-01",
        "completions": ["2023-01-01 06:00:00", "2023-01-02 06:30:00", "2023-01-03 07:00:00"]
    }
]
def main():
    tracker = HabitTracker()

    # Load predefined habits and example tracking data
    for habit_data in predefined_habits_data:
        habit = Habit(habit_data["name"], habit_data["description"], habit_data["periodicity"])
        habit.created_date = datetime.datetime.strptime(habit_data["created_date"], '%Y-%m-%d').date()
        habit.completions = [datetime.datetime.strptime(c, '%Y-%m-%d %H:%M:%S') for c in habit_data["completions"]]
        tracker.add_habit(habit)

    while True:
        print("\nHabit Tracker Menu:")
        print("1. Add Habit")
        print("2. Delete Habit")
        print("3. Complete Habit Task")
        print("4. View All Habits")
        print("5. View Habits by Periodicity")
        print("6. View Longest Streak")
        print("7. View Longest Streak for a Habit")
        print("8. Save to File")
        print("9. Exit")

        choice = input("Enter your choice (1-9): ")

        if choice == '1':
            name = input("Enter habit name: ")
            description = input("Enter habit description: ")
            periodicity = input("Enter habit periodicity (daily/weekly): ").lower()
            habit = Habit(name, description, periodicity)
            tracker.add_habit(habit)
            print(f"{name} habit added.")

        elif choice == '2':
            name = input("Enter habit name to delete: ")
            tracker.delete_habit(name)
            print(f"{name} habit deleted.")

        elif choice == '3':
            name = input("Enter habit name to complete the task: ")
            habit = next((habit for habit in tracker.habits if habit.name == name), None)
            if habit:
                habit.complete_task()
                print(f"Task for {name} habit completed.")
            else:
                print(f"{name} habit not found.")

        elif choice == '4':
            print("All Habits:")
            for habit in tracker.habits:
                print(habit)

        elif choice == '5':
            periodicity = input("Enter periodicity (daily/weekly): ").lower()
            habits = tracker.get_habits_by_periodicity(periodicity)
            print(f"Habits with {periodicity} periodicity:")
            for habit in habits:
                print(habit)

        elif choice == '6':
            longest_streak = tracker.get_longest_streak()
            print(f"Longest streak: {longest_streak} days")

        elif choice == '7':
            name = input("Enter habit name: ")
            longest_streak = tracker.get_longest_streak_for_habit(name)
            print(f"Longest streak for {name}: {longest_streak} days")

        elif choice == '8':
            tracker.save_to_file('habit_data.json')
            print("Data saved to file.")

        elif choice == '9':
            break

        else:
            print("Invalid choice. Please try again.")


if __name__ == "__main__":
    main()
